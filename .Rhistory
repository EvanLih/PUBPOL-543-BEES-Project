subset(select = -c(Q1:Q9))
View(test)
test %<>%
set_names(c(paste("Q", seq_along(test), sep = ""))) %>%
subset(select = -c(Q1:Q9)) %>%
rename(last = Q10)
library(dplyr)
test %<>%
set_names(c(paste("Q", seq_along(test), sep = ""))) %>%
subset(select = -c(Q1:Q9)) %>%
rename(last = Q10)
test<-read_xlsx("Desktop/Github/Evans2020EmploymentSurvey/Full_Data_Employment.xlsx", sheet = 1, col_names = FALSE, col_types = NULL, na = "", skip = 0)
test <- test[ -c(1), ]
test %<>% as.data.frame()
test %<>%
set_names(c(paste("Q", seq_along(test), sep = ""))) %>%
subset(select = -c(Q1:Q9)) %>%
rename(last = Q10)
require(sf)
require(rgdal)
require(ggplot2)
require(readxl)
library(dplyr)
library(geojsonio)
library(magrittr)
library(ggrepel)
library(ggpmisc)
library(ggthemes)
#Setting working directory to local folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
t.test(finalData$`Sustainable Development Index`, finalData$accessElectricity, na.rm = TRUE)
test <- subset(finalData, !is.na(finalData$`Sustainable Development Index` | !is.na(finalData$accessElectricity)))
#Renaming the column "country" to COUNTRY in order to match the shapefile/json we are pulling in. Although it is possible to
finalData <- rename(finalData, COUNTRY = Country)
#Getting mapping data we uploaded.
mapLink="https://github.com/EvanLih/PUBPOL-543-BEES-Project/raw/master/UIA_World_Countries_Boundaries.json"
#Getting projection which we will plot our map data on.
PROJmap="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
#PLot map data
worldMap=topojson_read(mapLink,crs=PROJmap,stringsAsFactors = FALSE)
#Now we are merging our own data with the map data by COUNTRY. This will allow us to plot the data. "all.x = F" means that we are choosing NOT to include columns that don't match the "COUNTRY" from our original data
mapMerge <- merge(finalData, worldMap, by = "COUNTRY", all.x = F)
sustainElectricity <- finalData %>% select(c("Continent", "accessElectricity", "Sustainable Development Index", "COUNTRY"))
sustainElectricity$accessElectricity %<>% as.numeric()
sustainElectricity %<>% rename(SDI = "Sustainable Development Index", country = "COUNTRY")
sustainElectricity %<>% filter(!is.na(accessElectricity))
#t.test to see correlation between access Electricity and SDI
t.test(x =sustainElectricity$accessElectricity, y = sustainElectricity$SDI,  paired = FALSE)
m <- lm(sustainElectricity$accessElectricity ~ sustainElectricity$SDI)
summary(m)$r.squared
ggplot(sustainElectricity, aes(x = accessElectricity, y = SDI)) +
geom_point() +
geom_text_repel(aes(label = country), size = 2.5) +
labs(x = "Access to Electricity (% of population)",
y = "Sustainable Development Index") +
theme_stata()
sustainElectricity1 <- sustainElectricity %>%
filter(!is.na(accessElectricity)) %>%
group_by(Continent) %>%
summarise(meanAccess = mean(accessElectricity),
meanSDI = mean(SDI))
ggplot(sustainElectricity1, aes(x = meanAccess, y = meanSDI)) +
geom_text_repel(aes(label = Continent)) +
geom_point() +
labs(x = "Access To Electricity (Mean)", y = "Sustainability Development Index Rating (Mean)")+
theme_stata()
#Converting our new dataframe into a "sf" dataframe. "sf" stands for "simple feature", a standardized way to encode spatial vector data.
#We are replacing the "geometry" of finalData with the "geomtry" from the finalData$geometry column.
st_geometry(mapMerge) <- mapMerge$geometry
str(finalData)
View(mapMerge)
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
str(finalData)
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
finalData <- read.csv("https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv")
#Setting working directory to local folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Importaing our Dataset. Our dataset is Data from the Suss
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
finalData = finalData[-c(161:999),]
knitr::opts_chunk$set(echo = TRUE)
#Importaing our Dataset. Our dataset is Data from the Suss
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
finalData = finalData[-c(161:999),]
knitr::opts_chunk$set(echo = TRUE)
colnames(finalData)
View(finalData)
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related by Continent?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + facet_grid(rows= vars(Continent))
# load in necessary libraries
library(ggplot2)
#library(geojsonio)
library(ggthemes)
library(dplyr)
library(ggrepel)
library(scales)
#load in our data
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
#select data frame
sdiResourceRent <- finalData %>% select(c("Continent", "ResourceRent", "Sustainable.Development.Index", "Country"))
sdiData = as.data.frame(sdiResourceRent)
##Evan CODE - this line of code "completecases" only keeps rows where there are outputs/non-missing values for specified columns. In this case, we are specifying all columns.
sdiResourceRent <- sdiResourceRent[complete.cases(sdiResourceRent), ]
#SDI alone - univariate
ContinentSdi = aggregate(sdiResourceRent[, 3], list(sdiResourceRent$Continent), mean)
#ContinentSdi
ggplot(ContinentSdi, aes(x=reorder(Group.1, x), y= x)) + geom_bar(position="dodge", stat="identity") + labs(x="Continent", y="Average Sustainable Development Index", title="How Do Continental SDI Scores Compare?", caption="Sources: Sustainable Development Project and The World Bank (2015)") + theme_stata() + geom_text(aes(label=round(x, digits=2)), position=position_dodge(width=0.9), vjust=1.3, size=3.5, color="white") + theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1, size=8)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + annotate("text", x = 6, y = 0.65, label = "Best Score", color="light green") + annotate("text", x = 1, y = 0.4, label = "Worst Score", color="pink")
# SDI compared to Resource Rent (multivariate)
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2))
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related by Continent?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + facet_grid(rows= vars(Continent))
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
interestCountryResourceRent <- sdiResourceRent %>%
filter(country == "United States" |
country == "China" |
country == "Nigeria" |
country == "Australia" |
country == "Singapore" |
country == "Peru" |
country == "Germany")
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
interestCountryResourceRent <- sdiResourceRent %>%
filter(country == "United States" |
country == "China" |
country == "Nigeria" |
country == "Australia" |
country == "Singapore" |
country == "Peru" |
country == "Germany")
#Selecting our data frame
sdiResourceRent <- finalData %>% select(c("Continent", "ResourceRent", "Sustainable.Development.Index", "Country"))
sdiData = as.data.frame(sdiResourceRent)
sdiResourceRent <- sdiResourceRent[complete.cases(sdiResourceRent), ]
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2))
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
interestCountryResourceRent <- sdiResourceRent %>%
filter(Country == "United States" |
Country == "China" |
Country == "Nigeria" |
Country == "Australia" |
Country == "Singapore" |
Country == "Peru" |
Country == "Germany")
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related by Continent?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + facet_grid(rows= vars(Continent)) +
geom_text_repel(data = interestCountryResourceRent,
aes(x = ResourceRent,
y = Sustainable.Development.Index,label=country), color = "black",
min.segment.length = unit(0, 'lines'),
nudge_y = .15,
nudge_x = 1)
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
interestCountryResourceRent <- sdiResourceRent %>%
filter(Country == "United States" |
Country == "China" |
Country == "Nigeria" |
Country == "Australia" |
Country == "Singapore" |
Country == "Peru" |
Country == "Germany")
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related by Continent?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + facet_grid(rows= vars(Continent)) +
geom_text_repel(data = interestCountryResourceRent,
aes(x = ResourceRent,
y = Sustainable.Development.Index,label=Country), color = "black",
min.segment.length = unit(0, 'lines'),
nudge_y = .15,
nudge_x = 1)
#subset
RenewableConsumptionSet <- finalData %>% select(c("Continent", "RenewConsumption", "Sustainable.Development.Index", "Country"))
RenewableConsumptionSet$RenewConsumption %<>% as.numeric()
packages <- c("sf", "rgdal", "ggplot2",
"readxl", "dplyr", "geojsonio",
"magrittr", "ggrepel", "ggpmisc",
"ggthemes", "lavaan", "BBmisc","RColorBrewer",
"tmap", "maptools", "scales", "ggrepel")
lapply(packages, library, character.only = TRUE)
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
finalData = finalData[-c(161:999),]
knitr::opts_chunk$set(echo = TRUE)
sdiResourceRent <- finalData %>% select(c("Continent", "ResourceRent", "Sustainable.Development.Index", "Country"))
sdiData = as.data.frame(sdiResourceRent)
##Evan CODE - this line of code "completecases" only keeps rows where there are outputs/non-missing values for specified columns. In this case, we are specifying all columns.
sdiResourceRent <- sdiResourceRent[complete.cases(sdiResourceRent), ]
#SDI alone - univariate
ContinentSdi = aggregate(sdiResourceRent[, 3], list(sdiResourceRent$Continent), mean)
#ContinentSdi
ggplot(ContinentSdi, aes(x=reorder(Group.1, x), y= x)) + geom_bar(position="dodge", stat="identity") + labs(x="Continent", y="Average Sustainable Development Index", title="How Do Continental SDI Scores Compare?", caption="Sources: Sustainable Development Project and The World Bank (2015)") + theme_stata() + geom_text(aes(label=round(x, digits=2)), position=position_dodge(width=0.9), vjust=1.3, size=3.5, color="white") + theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1, size=8)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + annotate("text", x = 6, y = 0.65, label = "Best Score", color="light green") + annotate("text", x = 1, y = 0.4, label = "Worst Score", color="pink")
finalData$accessElectricity=as.numeric((finalData$accessElectricity))
# Creating the data frame for Electricity Access & Renewable Consumption
df1=data.frame(finalData$Country,finalData$accessElectricity,finalData$RenewConsumption)
base1= ggplot(df1,aes(x = finalData$accessElectricity))
base1= base1 + stat_density(geom="line",color="Red") +  labs(x = "Access to Electricity (% of population))", y = "Density",
caption = "Source : The World Bank (2015)",
title = "What is The Global Distribution of Electricity Access?")   + theme(plot.caption = element_text(hjust= -0.2))+ theme_stata()
base1
base2= ggplot(df1,aes(x = finalData$RenewConsumption))
base2= base2 + stat_density(geom="line",color="Red") +  labs(x = "Renewable Consumption (% of total energy consumption)", y = "Density",
caption = "Source : The World Bank (2015)",
title = "What is The Global Distribution of Renewable Consumption?")    + theme(plot.caption = element_text(hjust= -0.2))+ theme_stata()
base2
#Prepare the data frame:
ContinentLand = finalData %>% select(c("Continent", "Country","Agricultural","Arable.Land","Forest"))
Landdf = as.data.frame(ContinentLand)
Landdf$`Arable.Land`=as.numeric((Landdf$`Arable.Land`))
Landdf$`Arable.Land`=round(Landdf$`Arable.Land`,digit=2)
#Calculate the difference between agricultural land and arable land, and create a new variable for the difference:
differenceLand=c(Landdf$Agricultural-Landdf$`Arable.Land`)
Landdf$diff = differenceLand
#Calculate continental average for each variable and update the data frame:
AgriMean = aggregate(data=Landdf, Agricultural~Continent,mean)
AraMean = aggregate(data=Landdf, Arable.Land~Continent,mean)
ForMean = aggregate(data=Landdf, Forest~Continent,mean)
diffMean = aggregate(data=Landdf, diff~Continent,mean)
LandMean = data.frame(AgriMean,AraMean,ForMean,diffMean)
LandMean = LandMean[,-c(3,5,7)]
library(reshape2)
LMm = melt(LandMean)
base3 = ggplot(LMm,aes(x = Continent,y = value)) +
labs(x = "Continent",
y = "Average Land Utilization Rate",
caption = "Source : The World Bank (2015)",
title = "How Do Land Sustainable Development Levels Compare by Continent?") +
theme(plot.caption = element_text(hjust= -0.2)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
scale_fill_brewer(labels = c("Agricultural Land", "Arable Land","Forest Land","Difference between Agricultural & Arable Land"),
palette="Pastel1") +
theme_stata() +
guides(fill = guide_legend(title = "Land Type", title.position = "top",nrow = 2))
base3
ContinentIncomeGroup = finalData %>% select(c("Continent", "Country","Income.Group"))
df2 = as.data.frame(ContinentIncomeGroup) # Creating the data frame
df2$Income.Group = factor(df2$Income.Group,levels = c("Low income","Lower middle income","Upper middle income","High income")) # Reordering income categories
base4 = ggplot(df2, aes(x = Income.Group)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(x = "Income Group",
y = "Proportion",
caption = "Source : The World Bank (2015)",
title = "How Do Income Levels Compare by Continent?") +
scale_y_continuous(labels = scales::percent, name = "Proportion") +
theme(plot.caption = element_text(hjust= -0.2)) +
facet_wrap(~ Continent) + coord_flip() + theme_stata() +
theme(axis.text.y = element_text(size = 6, angle = 45))
base4
sustainElectricity <- finalData %>% select(c("Continent", "accessElectricity", "Sustainable.Development.Index", "Country"))
sustainElectricity$accessElectricity %<>% as.numeric()
sustainElectricity %<>% rename(SDI = "Sustainable.Development.Index", country = "Country")
sustainElectricity %<>% filter(!is.na(accessElectricity))
interestCountry <- sustainElectricity %>%
filter(country == "United States" |
country == "China" |
country == "Nigeria" |
country == "Australia" |
country == "Singapore" |
country == "Peru" |
country == "Germany")
ggplot(sustainElectricity, aes(x = accessElectricity, y = SDI)) +
geom_point(aes(color = Continent)) +
labs(x = "Access to Electricity (% of population)",
y = "Sustainable.Development.Index (SDI)",
caption = "Source : Sustainable Development Project and The World Bank (2015)",
title = "Is Electricity Access Related to SDI?") +
theme_stata() +
geom_text_repel(data = interestCountry,
aes(x = accessElectricity,
y = SDI,label=country), color = "black",
min.segment.length = unit(0, 'lines'),
nudge_y = .15,
nudge_x = 1) +
facet_wrap(~Continent, ncol = 1)
only100sustain <- sustainElectricity %>%
filter(!is.na(accessElectricity)) %>%
filter(accessElectricity > 90) %>%
group_by(Continent) %>%
summarise(meanAccess = mean(accessElectricity),
meanSDI = mean(SDI))
ggplot(only100sustain, aes(x = meanAccess, y = meanSDI)) +
geom_text_repel(aes(label = Continent)) +
geom_point() +
labs(x = "Average Access To Electricity (% of Population)", y = "Average Sustainability Development Index Rating (Higher is Better)",
caption = "Source : Sustainable Development Project and The World Bank (2015)")+
ggtitle("How does SDI Compare Across Continents \n for Countries with Widespread Electricity Access?") +
theme_stata()
#Selecting our data frame
sdiResourceRent <- finalData %>% select(c("Continent", "ResourceRent", "Sustainable.Development.Index", "Country"))
sdiData = as.data.frame(sdiResourceRent)
sdiResourceRent <- sdiResourceRent[complete.cases(sdiResourceRent), ]
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2))
# create individual graphs for each continent
# SDI compared to Resource Rent (multivariate)
interestCountryResourceRent <- sdiResourceRent %>%
filter(Country == "United States" |
Country == "China" |
Country == "Nigeria" |
Country == "Australia" |
Country == "Singapore" |
Country == "Peru" |
Country == "Germany")
ggplot(sdiResourceRent, aes(x = ResourceRent, y = Sustainable.Development.Index, color=Continent)) +
geom_point() +
# geom_text_repel(aes(label = Country), size = 1) +
labs(x = "Resource Rent (% of GDP)",
y = "Sustainable Development Index", title="How Are Resource Rent and SDI Related by Continent?", caption = "Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() + theme(legend.title=element_text(size=11)) + theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0))) + theme(plot.caption = element_text(hjust = -0.2)) + facet_grid(rows= vars(Continent)) +
geom_text_repel(data = interestCountryResourceRent,
aes(x = ResourceRent,
y = Sustainable.Development.Index,label=Country), color = "black",
min.segment.length = unit(0, 'lines'),
nudge_y = .15,
nudge_x = 1)
#subset
RenewableConsumptionSet <- finalData %>% select(c("Continent", "RenewConsumption", "Sustainable.Development.Index", "Country"))
RenewableConsumptionSet$RenewConsumption %<>% as.numeric()
RenewableConsumptionSet %<>% rename(SDI = "Sustainable.Development.Index", country = "Country", RenewableConsumption = "RenewConsumption")
RenewableConsumptionSet %<>% filter(!is.na(RenewableConsumption))
interestCountryrenewable <- RenewableConsumptionSet %>%
filter(country == "United States" |
country == "China" |
country == "Nigeria" |
country == "Australia" |
country == "Singapore" |
country == "Peru" |
country == "Germany")
#plot Renewable Comsumption and SDI:
ggplot(RenewableConsumptionSet, aes(x = RenewableConsumption, y = SDI,
color=Continent)) +
geom_point() +
#geom_text_repel(aes(label = country), size = 1.5) +
labs(title = "How Renewable Energy Consumption and SDI Related?", x = "Renewable Energy Consumption (% of total energy consumption)",
y = "Sustainable Development Index", caption="Sources: Sustainable Development Project and The World Bank (2015)") +
theme_stata() +
facet_grid(rows= vars(Continent)) +
geom_text_repel(data = interestCountryrenewable,
aes(x = RenewableConsumption,
y = SDI,label=country), color = "black",
min.segment.length = unit(0, 'lines'),
nudge_y = .15,
nudge_x = 1)
SDIByCountry=data.frame(finalData$Country,finalData$`Sustainable.Development.Index`)
names(SDIByCountry)=c('Country','SDIScore')
LandByCountry=data.frame(finalData$Country,differenceLand)
names(LandByCountry)=c('Country','LandUse')
num_num=merge(SDIByCountry,LandByCountry)
num_num$Country=as.character(num_num$Country)
SDILANDCountry = ggplot(num_num, aes(y = SDIScore, x = LandUse)) +
labs(x = "Difference between Agricultural Land & Arable Land",
y = "Sustainability Development Index",
caption = "Source : Sustainable Development Project and The World Bank (2015)",
title = "Is Land Sustainable Development Level Related to SDI?") +
theme(plot.caption = element_text(hjust= -0.2)) +
theme_stata()
# highlighting overlaping of points
SDILANDCountry = SDILANDCountry +
geom_hex(bins = 10) +
scale_fill_distiller(palette ="Greys",direction=1) +
guides(fill = guide_legend(title = "Count", title.position = "top",size=1)) +
theme(legend.position="right")
SDILANDCountry
#Calculate continental average of data, and prepare the data frame:
# Comparing average continental SDI score and land susatinability level
SDIByContinent=aggregate(data=finalData, `Sustainable.Development.Index`~Continent, mean)
LandUseByContinent=aggregate(data=finalData, differenceLand~Continent, mean)
num_num1=merge(SDIByContinent,LandUseByContinent)
num_num1$Continent=as.character(num_num1$Continent)
#Plot:
SDILANDContinent =
ggplot(num_num1, aes(y = `Sustainable.Development.Index`, x = differenceLand)) +
geom_point() +
geom_text_repel(aes(label=Continent),size=2.5) +
labs(x = "Difference between Agricultural Land & Arable Land",
y = "Average Sustainability Development Index Rating",
caption = "Source : Sustainable Development Project and The World Bank (2015)",
title = "Is Continental Land Sustainable Development Level Related to SDI?")+
theme(plot.caption = element_text(hjust= -0.2))+
theme_stata()
SDILANDContinent
#Selecting Final Data for Analysis
finalData %<>% select(1:17)
finalData <- finalData[complete.cases(finalData), ]
finalData$Income..GNI.per.capita.constant.2011..PPP. %<>% as.numeric()
#Creating model for new index
modelNUM = '
demox=~Sustainable.Development.Index + ResourceRent +Forest + Agricultural + accessElectricity + Arable.Land + RenewConsumption'
#Creating new index
fitNUM<-cfa(modelNUM, data = finalData)
indexCFA=lavPredict(fitNUM)
indexCFANorm=normalize(indexCFA,
method = "range",
margin=2, # by column
range = c(0, 10))
finalData$indexCFA=(indexCFANorm)
#Pulling map data
mapLink="https://github.com/EvanLih/PUBPOL-543-BEES-Project/raw/master/UIA_World_Countries_Boundaries.json"
PROJmap="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
#Plot map data
worldMap=topojson_read(mapLink,crs=PROJmap,stringsAsFactors = FALSE)
worldMap %<>% rename( Country = "COUNTRY")
#Now we are merging our own data with the map data by COUNTRY. This will allow us to plot the data. "all.x = F" means that we are choosing NOT to include columns that don't match the "COUNTRY" from our original data
mapMerge <- merge(finalData, worldMap, by = "Country", all.x = F)
#Converting our new dataframe into a "sf" dataframe. "sf" stands for "simple feature", a standardized way to encode spatial vector data.
#We are replacing the "geometry" of finalData with the "geomtry" from the finalData$geometry column.
st_geometry(mapMerge) <- mapMerge$geometry
#Now we will create the plot. We call on the data from worldmap and its "simple feature" geom. Over that, we will overaly the data from "mapMerge" onto this plot.
##Creating "cut" intervals to plot
mapMerge$cut=cut_number(mapMerge$indexCFA,5,
ordered_result=T,
dig.lab=5)
mapMerge$cutSDI=cut_number(mapMerge$Sustainable.Development.Index,5,
ordered_result=T,
dig.lab=5)
#Getting average SDI Index for each continent. This will allow us to plot the average/New SDI For all the continents
mapMerge$cutSDI %<>% as.numeric()
mapMerge %<>%
group_by(Continent) %>%
mutate_at(vars(cutSDI, cut),
funs(as.numeric)) %>%
mutate(meanSDI = round(mean(cutSDI), digits= 2),
meanNewSDI = round(mean(cut), digits = 2)) %>%
mutate_at(vars(meanSDI, meanNewSDI),
funs(as.factor))
mapMerge$meanSDI %<>% as.factor()
ggplot(data=worldMap) +
geom_sf() +
geom_sf(data = mapMerge, aes(fill=meanSDI),color=NA,show.legend = T) +
scale_fill_brewer(palette = 'YlGnBu',
name = "SDI Index (Higher is Better)") +
labs(caption = "Source : Sustainable Development Project")+
theme_map() +
ggtitle("Original SDI Index") +
theme(plot.title = element_text(hjust = .5),
plot.caption = element_text(hjust= 0)) +
geom_text(aes(23, 10, label="Africa"), show_guide = F) +
geom_text(aes(-59, -9, label="S. America"), show_guide = F) +
geom_text(aes(-100, 45, label="N. America"), show_guide = F) +
geom_text(aes(90, 40, label="Asia"), show_guide = F) +
geom_text(aes(23, 50, label="Europe"), show_guide = F) +
geom_text(aes(135, -25, label="Oceania"), show_guide = F)
ggplot(data=worldMap) +
geom_sf() +
geom_sf(data = mapMerge, aes(fill=meanNewSDI),color=NA,show.legend = T) +
theme_map() +
scale_fill_brewer(palette = 'YlGnBu',
name = "New Index (Higher is Better)") +
labs( caption = "Source: Sustainable Development Project, World Bank 2015",
title = "New SDI index") +
theme(plot.title = element_text(hjust = .5),
plot.caption = element_text(hjust= 0)) +
geom_text(aes(23, 10, label="Africa"), show_guide = F) +
geom_text(aes(-59, -9, label="S. America"), show_guide = F) +
geom_text(aes(-100, 45, label="N. America"), show_guide = F) +
geom_text(aes(90, 40, label="Asia"), show_guide = F) +
geom_text(aes(23, 50, label="Europe"), show_guide = F) +
geom_text(aes(135, -25, label="Oceania"), show_guide = F)
